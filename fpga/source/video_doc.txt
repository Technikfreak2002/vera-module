------------------------------------------------------------------------------
-=                     Commander X8 - VERA video module                     =-
------------------------------------------------------------------------------

DISCLAIMER:
This is preliminary documentation. Register layout as described in this
document can change at any point during development.

------------------------------------------------------------------------------
- 6502 bus registers
------------------------------------------------------------------------------

From the perspective of the 6502 in the Commander X8 the video module is
located at address $9F20-$9F27.

The addresses are defined as follows:

     7  6  5  4  3  2  1  0
    +----------+---+-------+
    |Increment | 0 |A18-A16|  $9F20
    +----------+---+-------+
    |    Address A15-A8    |  $9F21
    +----------------------+
    |    Address A7-A0     |  $9F22
    +----------------------+
    |      Data port       |  $9F23
    +----------------------+
    |         TBD          |  $9F24
    +----------------------+
    |         TBD          |  $9F25
    +----------------------+
    |         TBD          |  $9F26
    +----------------------+
    |         TBD          |  $9F27
    +----------------------+

Fields:
- Increment: Increment address by 0..15 after each access on $9F23
- Address  : 19 bit address for indirect addressing
- Data port: Indirect read or write to address indicated by address

To access the internal memory of the module first write $9F20-$9F21 to set the
address, then at address $9F23 the data can be accessed (read/write). After
each access the address in $9F20-$9F21 will be automatically increment by the
value set in the upper nibble of $9F20. This allows efficient access to the
internal memory of the module.

------------------------------------------------------------------------------
- Internal memory map
------------------------------------------------------------------------------

    $00000-$1FFFF  Main RAM
    $20000-$207FF  PETSCII character ROM (upper-case)
    $20800-$20FFF  PETSCII character ROM (lower-case)
    $40000-$4000F  Layer 1 registers
    $40200-$403FF  Palette

The module has 128kB general purpose RAM, which can be used to store character
data, tile data, tile maps, etc. There is also 4kB of ROM which contains the
PETSCII character ROM (identical to C64).

------------------------------------------------------------------------------
- Layer 1 registers
------------------------------------------------------------------------------

    $40000  LAYER1_CTRL           (Not used yet)
    $40001  LAYER1_MAP_BASE_LO    (LAYER1_MAP_BASE[9:2])
    $40002  LAYER1_MAP_BASE_HI    (LAYER1_MAP_BASE[17:10])
    $40003  LAYER1_TILE_BASE_LO   (LAYER1_TILE_BASE[9:2])
    $40004  LAYER1_TILE_BASE_HI   (LAYER1_TILE_BASE[17:10])
    $40005  LAYER1_SCROLLX_LO     (Not used yet)
    $40006  LAYER1_SCROLLX_HI     (Not used yet)
    $40007  LAYER1_SCROLLY_LO     (Not used yet)
    $40008  LAYER1_SCROLLY_HI     (Not used yet)

LAYER1_MAP_BASE and LAYER1_TILE_BASE are aligned at a multiple of 4 bytes.
The lower 2 bits are always 0 and not specified in the register.

In text mode:
- LAYER1_MAP_BASE specifies the address at which the text buffer is located
  After reset this register points to $20000.

   * The text buffer is organized as 80x2x60 bytes. Each character is
     specified as 2 bytes, the first byte is the character index and the
     second byte specifies the foreground color (lower nibble) and background
     color (upper nibble). Text mode allows for a maximum of 16-colors.
     (The first 16 colors of the 256 color palette.)

- LAYER1_TILE_BASE specifies the address at which the character data is
  located (eg. the character ROM)
  After reset this register points to $00000.

   * This can be set to $20000 for the upper case font and $20800 for the
     lower case font.
   * A custom font can be put in RAM and this register can be set to point
     to it.

------------------------------------------------------------------------------
- Palette
------------------------------------------------------------------------------

The palette is located at $40200-$403FF.

It is organized as 256 entries of 2 bytes. The bytes are organized in a little
endian fashion.

Every entry contains a 4 bit value for each color component, which allows for
a palette of 256 colors out of 4096 possible colors.

Each entry is organized as:

     5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
    +-------+-------+-------+-------+
    |unused |  Red  | Green | Blue  |
    +-------+-------+-------+-------+

Translated to the 8-bit bus this turns into:

     7 6 5 4 3 2 1 0
    +-------+-------+
    | Green | Blue  | 0
    +-------+-------+
    |unused |  Red  | +1
    +-------+-------+

The FPGA will start up with a default palette in which the first 16 colors are
identical to C64. The second 16 colors contain a grayscale ramp. The remaining
colors are organized in a way to contain different hues, saturation levels and
intensities.
